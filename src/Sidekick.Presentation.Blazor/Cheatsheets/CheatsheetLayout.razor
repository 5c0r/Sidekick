
<SidekickLayout>
    <SidekickAppBar Title="@Title">
        <LeftContent>
            <MudIconButton Icon="@Icons.Material.Filled.Menu"
                           Color="Color.Inherit"
                           Edge="Edge.Start"
                           OnClick="ToggleMenu" />
        </LeftContent>
    </SidekickAppBar>

    <MudDrawer @bind-Open="@MenuOpened"
               Anchor="Anchor.Left"
               Variant="@DrawerVariant.Temporary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5">@Resources.Cheatsheets</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavGroup Title="@Resources.Leagues"
                         Expanded="true">
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/betrayal">
                    @Resources.Betrayal
                </MudNavLink>
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/blight">
                    @Resources.Blight
                </MudNavLink>
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/delve">
                    @Resources.Delve
                </MudNavLink>
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/heist">
                    @Resources.Heist
                </MudNavLink>
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/incursion">
                    @Resources.Incursion
                </MudNavLink>
                <MudNavLink Match="NavLinkMatch.All"
                            Href="/cheatsheets/metamorph">
                    @Resources.Metamorph
                </MudNavLink>
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <MudContainer Class="py-3">
            @ChildContent
        </MudContainer>
    </MudMainContent>
</SidekickLayout>

@code {
    [Inject] private IMediator Mediator { get; set; }
    [Inject] private CheatsheetResources Resources { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string Title { get; set; }

    private bool MenuOpened { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var routeMatch = new System.Text.RegularExpressions.Regex("cheatsheets\\/([^\\\\\\/]*)").Match(NavigationManager.Uri);
        if (routeMatch.Success)
        {
            await Mediator.Send(new SaveSettingCommand(nameof(ISidekickSettings.Cheatsheets_Selected), routeMatch.Groups[1].Value));
        }
        await base.OnInitializedAsync();
    }

    public void ToggleMenu()
    {
        MenuOpened = !MenuOpened;
    }
}
