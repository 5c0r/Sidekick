@page "/error/{type}"

<SidekickLayout>
    <SidekickAppBar Title="@Resources.Title" />

    <MudMainContent>
        <MudContainer Class="py-2">
            <MudPaper Class="pa-2 mb-4">
                <MudGrid Class="align-center">
                    <MudItem xs="3">
                        <div class="d-flex justify-center">
                            <MudIcon Size="Size.Large" Color="Color.Error" Icon="@Icons.Filled.Error" />
                        </div>
                    </MudItem>
                    <MudItem xs="9">
                        <MudText Align="Align.Center">
                            @Text
                        </MudText>
                    </MudItem>
                </MudGrid>
            </MudPaper>
            <div class="d-flex justify-end">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="Close">
                    @Resources.Close
                </MudButton>
            </div>
        </MudContainer>
    </MudMainContent>
</SidekickLayout>

@code {
    [Inject] private IViewInstance ViewInstance { get; set; }
    [Inject] private ErrorResources Resources { get; set; }

    [Parameter] public string Type { get; set; }

    private string Text => Type switch
    {
        ErrorType.InvalidItem => Resources.InvalidItemError,
        ErrorType.UnavailableTranslation => Resources.AvailableInEnglishError,
        ErrorType.Unparsable => Resources.ParserError,
        _ => Resources.Error,
    };

    public async Task Close()
    {
        await ViewInstance.Close();
    }
}
