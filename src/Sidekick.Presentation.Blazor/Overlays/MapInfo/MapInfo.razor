@page "/map/{encodedItem}"

<MudLayout>
    <SidekickAppBar Title="@Localizer[MapInfoResources.Title]" View="View.Map"></SidekickAppBar>
    <MudMainContent>
        <MudContainer Class="py-6">
            @if (ViewModel.IsSafe)
            {
                <MudText Style="color: #00FF00">@Localizer[MapInfoResources.Is_Safe]</MudText>
            }
            @foreach (DangerousMapModModel dangerousMod in ViewModel.DangerousMapMods)
            {
                string color = $"color: {dangerousMod.Color}";
                <MudText Style="@color">@dangerousMod.Modifier</MudText>
            }
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {


    [Parameter] public string EncodedItem { get; set; }
    [Inject] private IStringLocalizer<MapInfoResources> Localizer { get; set; }
    [Inject] private MapInfoModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {

        string UrlDecoded = System.Web.HttpUtility.UrlDecode(EncodedItem);

        byte[] Base64Decoded = Convert.FromBase64String(UrlDecoded);

        string JsonString = System.Text.Encoding.UTF8.GetString(Base64Decoded);

        Sidekick.Domain.Game.Items.Models.Item item = System.Text.Json.JsonSerializer.Deserialize<Sidekick.Domain.Game.Items.Models.Item>(JsonString);

        ViewModel.Initialize(item);
    }
}
