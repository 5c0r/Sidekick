@using Sidekick.Domain.Apis.PoeNinja.Models
@using Sidekick.Domain.Apis.PoeNinja.Queries

@if (Price != null)
{
    <MudPaper Class="pa-2 d-inline-block">
        <MudText Typo="Typo.body2" Align="Align.Center" Class="mb-1">@Resources.PoeNinja</MudText>
        <Sidekick.Presentation.Blazor.Prices.Components.PoePrice Value="Price.Price" />
        <MudText Typo="Typo.body2" Align="Align.Center" Class="mt-1">@Resources.PoeNinjaLastUpdated : @Price.LastUpdated.ToString("t")</MudText>
    </MudPaper>
}

@code {
    [Inject] private PriceResources Resources { get; set; }
    [Inject] private IMediator Mediator { get; set; }

    [Parameter] public Item Item { get; set; }

    private NinjaPrice Price { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Price = await Mediator.Send(new GetPriceFromNinjaQuery(Item));

        await base.OnParametersSetAsync();
    }
}
