@page "/settings/chat"
@using Sidekick.Domain.Settings
@using Sidekick.Presentation.Blazor.Settings.Components

<SettingsLayout>
    @foreach (var chatSetting in ViewModel.Chat_Commands)
    {
        <ChatCommandEditor ChatSetting="chatSetting"
                           OnRemove="() => Remove(chatSetting)" />
    }

    <MudList Clickable="false"
             Dense="true">
        <MudListSubheader>@Resources.Chat_Commands</MudListSubheader>
        <MudListItem>@Resources.Chat_Commands_Hideout</MudListItem>
        <MudListItem>@Resources.Chat_Commands_Exit</MudListItem>
    </MudList>

    <MudList Clickable="false"
             Dense="true">
        <MudListSubheader>@Resources.Chat_Wildcard</MudListSubheader>
        <MudListItem>@Resources.Chat_Wildcard_Me_CharacterName</MudListItem>
        <MudListItem>@Resources.Chat_Wildcard_LastWhisper_CharacterName</MudListItem>
    </MudList>

    <div class="d-flex flex-row-reverse">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Secondary"
                   OnClick="Add">
            @Resources.Chat_Add
        </MudButton>
    </div>
</SettingsLayout>

@code {
    [Inject] private SettingsResources Resources { get; set; }
    [Inject] private SettingsViewModel ViewModel { get; set; }

    private void Remove(ChatSetting chatSetting)
    {
        ViewModel.Chat_Commands.Remove(chatSetting);
    }

    private void Add()
    {
        ViewModel.Chat_Commands.Add(new ChatSetting("", "", true));
    }
}
