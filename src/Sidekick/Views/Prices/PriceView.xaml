<base:BaseOverlay
    x:Class="Sidekick.Views.Prices.PriceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="clr-namespace:Sidekick.Views"
    xmlns:converters="clr-namespace:Sidekick.Converters"
    xmlns:loc="clr-namespace:Sidekick.Views"
    xmlns:local="clr-namespace:Sidekick.Views.Prices"
    xmlns:resx="clr-namespace:Sidekick.Localization.Prices;assembly=Sidekick.Localization"
    Width="900"
    Height="500"
    MinWidth="900"
    MinHeight="500"
    loc:Translation.ResourceManager="{x:Static resx:PriceResources.ResourceManager}"
    Topmost="True"
    WindowStyle="None">

    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <converters:StringToVisibilityConverter x:Key="StringToVisibility" />
            <converters:ReverseStringToVisibilityConverter x:Key="ReverseStringToVisibility" />
            <converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibility" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.Style>
        <Style BasedOn="{StaticResource {x:Type Window}}" TargetType="Window" />
    </Window.Style>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <local:Filters
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            ViewModel="{Binding}"
            Visibility="{Binding IsError, Converter={StaticResource ReverseBooleanToVisibility}}" />

        <Grid Visibility="{Binding IsError, Converter={StaticResource BooleanToVisibility}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <GroupBox>
                <TextBlock HorizontalAlignment="Center" Text="{loc:Loc Error}" />
            </GroupBox>
            <ProgressBar
                Grid.Row="1"
                Width="250"
                Height="16"
                IsIndeterminate="True" />
        </Grid>

        <Grid Grid.Column="1" Visibility="{Binding IsError, Converter={StaticResource ReverseBooleanToVisibility}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <DataGrid
                Name="ItemList"
                Margin="0"
                AutoGenerateColumns="False"
                ItemsSource="{Binding Path=Results}"
                ScrollViewer.CanContentScroll="False"
                SelectionChanged="ItemList_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="5*"
                        Binding="{Binding Path=Item.Listing.Account.Name}"
                        Header="{loc:Loc OverlayAccountName}" />
                    <DataGridTemplateColumn
                        Width="2*"
                        MinWidth="50"
                        Header="{loc:Loc OverlayPrice}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Amount}" />
                                    <TextBlock Text=" " />
                                    <TextBlock Text="{Binding Item.Listing.Price.Currency}" Visibility="{Binding ImageUrl, Converter={StaticResource ReverseStringToVisibility}}" />
                                    <Image
                                        Height="20"
                                        VerticalAlignment="Center"
                                        Source="{Binding ImageUrl}"
                                        ToolTip="{Binding Item.Listing.Price.Currency}"
                                        Visibility="{Binding ImageUrl, Converter={StaticResource StringToVisibility}}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Width="1*"
                        MinWidth="30"
                        Binding="{Binding Path=Item.ItemLevel}"
                        Header="{loc:Loc OverlayItemLevel}" />
                    <DataGridTextColumn
                        Width="1*"
                        MinWidth="60"
                        Binding="{Binding Path=Age}"
                        Header="{loc:Loc OverlayAge}" />
                </DataGrid.Columns>
            </DataGrid>

            <Button
                Grid.Row="1"
                Click="Button_Click"
                Content="{loc:Loc LoadMoreData}"
                Visibility="{Binding FullyLoaded, Converter={StaticResource ReverseBooleanToVisibility}}" />

            <Grid Grid.Row="2">
                <ProgressBar
                    Height="16"
                    Margin="{StaticResource SpacerX}"
                    IsIndeterminate="True"
                    Visibility="{Binding IsFetching, Converter={StaticResource BooleanToVisibility}}" />

                <StackPanel
                    Margin="{StaticResource Spacer}"
                    VerticalAlignment="Center"
                    Visibility="{Binding IsFetched, Converter={StaticResource BooleanToVisibility}}">
                    <TextBlock>
                        <Hyperlink NavigateUri="{Binding Uri}" RequestNavigate="OpenLink">
                            <TextBlock Text="{Binding CountString}" />
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Text="{Binding PredictionText}" Visibility="{Binding IsPredicted, Converter={StaticResource BooleanToVisibility}}" />
                    <TextBlock Text="{Binding PoeNinjaText}" Visibility="{Binding IsPoeNinja, Converter={StaticResource BooleanToVisibility}}" />
                </StackPanel>
            </Grid>
        </Grid>

        <local:ItemPreview Grid.Column="2" ViewModel="{Binding}" />
    </Grid>
</base:BaseOverlay>
