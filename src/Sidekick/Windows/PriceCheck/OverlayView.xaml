<Window
    x:Class="Sidekick.Windows.PriceCheck.OverlayWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:VM="clr-namespace:Sidekick.Windows.PriceCheck.ViewModels"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:r="clr-namespace:Sidekick.Localization.PriceCheck;assembly=Sidekick.Localization">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Main.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate DataType="{x:Type VM:ListItem}">
                <StackPanel>
                    <StackPanel.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Odd}" Value="True">
                                    <Setter Property="StackPanel.Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
                                </DataTrigger>
                                <Trigger Property="StackPanel.IsMouseOver" Value="True">
                                    <Setter Property="StackPanel.Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBrush}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <ContentControl Content="{Binding Path=Item}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Style>
        <Style BasedOn="{StaticResource WindowOverlay}" TargetType="Window" />
    </Window.Style>

    <DockPanel Margin="{StaticResource Spacer}">
        <Label
            Margin="{StaticResource SpacerBottom}"
            VerticalAlignment="Center"
            Content="{Binding Path=queryResult.Item.Name, Mode=OneWay}"
            DockPanel.Dock="Top"
            FontSize="16"
            FontWeight="Bold"
            Foreground="{Binding queryResult.Item.Rarity, Converter={StaticResource RarityToColorConverter}}" />

        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Name="txtPrediction" VerticalAlignment="Center" />
            <TextBlock VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding queryResult.HasAverage}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <TextBlock.Text>
                    <MultiBinding StringFormat="poe.ninja: {0}c (Last update: {1:HH:mm})">
                        <Binding Path="queryResult.PoeNinjaItem.ChaosValue" />
                        <Binding Path="queryResult.LastRefreshTimestamp" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <TextBlock Grid.Column="1" VerticalAlignment="Center">
                <Hyperlink NavigateUri="{Binding queryResult.Uri}" RequestNavigate="openQueryLink">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}Showing {0} items out of {1}">
                                <Binding Mode="OneWay" Path="queryResult.Result.Count" />
                                <Binding Path="queryResult.Total" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Hyperlink>
            </TextBlock>
        </Grid>

        <GroupBox>
            <GroupBox.Header>
                <Grid Margin="0,0,22,0" Visibility="{Binding Path=queryResult, TargetNullValue=Hidden}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140*" />
                        <ColumnDefinition Width="140*" />
                        <ColumnDefinition Width="80*" />
                        <ColumnDefinition Width="40*" />
                        <ColumnDefinition Width="80*" />
                    </Grid.ColumnDefinitions>
                    <Label
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        Content="{x:Static r:PriceCheckResources.OverlayAccountName}" />
                    <Label
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        Content="{x:Static r:PriceCheckResources.OverlayCharacter}" />
                    <Label
                        Grid.Column="2"
                        HorizontalAlignment="Left"
                        Content="{x:Static r:PriceCheckResources.OverlayPrice}" />
                    <Label
                        Grid.Column="3"
                        HorizontalAlignment="Left"
                        Content="{x:Static r:PriceCheckResources.OverlayItemLevel}" />
                    <Label
                        Grid.Column="4"
                        HorizontalAlignment="Left"
                        Content="{x:Static r:PriceCheckResources.OverlayAge}" />
                </Grid>
            </GroupBox.Header>
            <ScrollViewer Name="_itemList" ScrollChanged="_itemList_ScrollChanged">
                <ItemsControl x:Name="DisplayedItemsControl" ItemsSource="{Binding Path=itemListingControls}" />
            </ScrollViewer>
        </GroupBox>
    </DockPanel>
</Window>
